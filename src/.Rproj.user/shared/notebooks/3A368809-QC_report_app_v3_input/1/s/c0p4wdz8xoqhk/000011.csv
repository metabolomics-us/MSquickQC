"0",""
"0","# prepare input for PCA (data frame, qc1, mdata + 1)"
"0",""
"0","pca <- function(df, "
"0","                q3, "
"0","                md1) {"
"0",""
"0","  "
"0","    ## remove method blanks (if present)"
"0",""
"0","    d_pc_in <<- df %>% "
"0","    filter(sampleType != q3)"
"0",""
"0","    ## change group variables to factor instead of character"
"0",""
"0","    d_pc_in$`sampleType` <- as.factor(d_pc_in$`sampleType`)"
"0",""
"0","    ## separate metadata and conduct PCA"
"0",""
"0","    pc_in <<- prcomp(d_pc_in[,md1:ncol(d_pc_in)], "
"0","                 scale. = T) "
"0",""
"0","    "
"0","    "
"0","    "
"0","    "
"0","    ## extract first two PCs (for plotting)"
"0","  "
"0","    vrc <- summary(pc_in)$importance[2,]"
"0",""
"0","    PC1 <- pc_in$x[, 1]"
"0",""
"0","    PC2 <- pc_in$x[, 2]"
"0",""
"0","    p9 <<- cbind(d_pc_in, "
"0","               PC1, "
"0","               PC2)"
"0",""
"0","    ## functions to name plot axes"
"0",""
"0",""
"0","    pc1_lab <- function(val, "
"0","                      digits = 2, "
"0","                      format = 'f') {"
"0","      "
"0","          paste0('PC1 (', "
"0","            formatC(100*val, "
"0","                    format = format, "
"0","                    digits = digits),"
"0","                 '%)')"
"0","                "
"0","                }"
"0",""
"0",""
"0","    pc2_lab <- function(val, "
"0","                      digits = 2, "
"0","                      format = 'f') {"
"0","      paste0('PC2 (', "
"0","             formatC(100*val, "
"0","                     format = format, "
"0","                     digits = digits),"
"0","         '%)')"
"0","      }"
"0","    "
"0","    "
"0","    "
"0","    "
"0","    ## OUTLIER DETECTION ##"
"0",""
"0","    ## Determine samples + or - 3 SD from mean mTIC of each group"
"0",""
"0","    p9$Index <- seq.int(1:nrow(p9))"
"0",""
"0","    ## Calculate mTIC"
"0","    "
"0","    p9 <- p9 %>% "
"0","      dplyr::select(Index, "
"0","                    PC1, "
"0","                    PC2, "
"0","                    everything()"
"0","                    )"
"0",""
"0","    p9$mTIC <- apply(p9[,7:ncol(p9)], "
"0","                    MARGIN = 1, "
"0","                    function (x) sum(x)"
"0","                    ) "
"0",""
"0","    ## Calculate mean and SD"
"0","    "
"0","    sval <- p9 %>% "
"0","            group_by(sampleType) %>%"
"0","            summarise_at(vars(mTIC), "
"0","               list(mean = mean,"
"0","                    sdev = sd)"
"0","               )"
"0",""
"0","    sval$sd.min <- sval$mean - "
"0","                   3*sval$sdev"
"0",""
"0","    sval$sd.max <- sval$mean + "
"0","                   3*sval$sdev"
"0",""
"0","    "
"0","    "
"0","    "
"0","    ## Isolate each sample group"
"0","    "
"0","    slv <-  function(df,"
"0","                     x) { "
"0","  "
"0","                dfn <<- df %>% "
"0","                        filter(sampleType == x)"
"0","              "
"0","                }"
"0",""
"0","    ### Experimental samples"
"0","    "
"0","    slv(sval, "
"0","        ""Sample"")"
"0",""
"0","    q1v <- dfn"
"0","    "
"0","    slv(p9, "
"0","        ""Sample"")"
"0",""
"0","    v1 <- dfn"
"0",""
"0","    ### 1st quality control"
"0","    "
"0","    slv(sval, "
"0","        qc1)"
"0",""
"0","    q2v <- dfn"
"0","    "
"0","    slv(p9, "
"0","        qc1)"
"0",""
"0","    v2 <- dfn"
"0",""
"0","    ### 2nd quality control"
"0","    "
"0","    slv(sval, "
"0","        qc2)"
"0",""
"0","    q3v <- dfn"
"0",""
"0","    slv(p9, "
"0","        qc2)"
"0",""
"0","    v3 <- dfn"
"0","    "
"0","    "
"0","    "
"0",""
"0","    ## Mark outliers for each sample group"
"0",""
"0","    v1$out <- with(v1, "
"0","                   ifelse(mTIC > q1v$sd.max | "
"0","                          mTIC < q1v$sd.min,"
"0","                          1,"
"0","                          0)"
"0","                   )"
"0","    "
"0",""
"0","    v2$out <- with(v2, "
"0","                   ifelse(mTIC > q2v$sd.max & "
"0","                          mTIC < q2v$sd.min,"
"0","                          1,"
"0","                          0)"
"0","                   )"
"0","    "
"0",""
"0","    v3$out <- with(v3, "
"0","                   ifelse(mTIC > q3v$sd.max & "
"0","                          mTIC < q3v$sd.min,"
"0","                          1,"
"0","                          0)"
"0","                   )"
"0",""
"0","    ## Calculate number of standard deviations and combine into one df"
"0",""
"0","    v1$nsd <- abs(v1$mTIC - q1v$mean)/"
"0","              q1v$sdev"
"0",""
"0","    v2$nsd <- abs(v2$mTIC - q2v$mean)/"
"0","              q2v$sdev"
"0",""
"0","    v3$nsd <- abs(v3$mTIC - q3v$mean)/"
"0","              q3v$sdev"
"0",""
"0","    p9 <<- rbind(v1, "
"0","                v2, "
"0","                v3)"
"0","    "
"0","    p9.out <<- p9[which(p9$out == 1),"
"0","                  ]"
"0",""
"0","}"
"0","    "
"0","    pca(df1, "
"0","        qc3, "
"0","        4)  "
"0","    "
"0","    "
"0","## Update params"
"0","    "
"0","params$outlier <- ifelse(nrow(p9.out) == 0,"
"0","                         FALSE,"
"0","                         TRUE)"
"0",""
"0","params$no_outlier <- ifelse(nrow(p9.out) == 0,"
"0","                            TRUE,"
"0","                            FALSE)"
"0",""
"0","eval_outlier <- params$outlier"
"0",""
"0","eval_no_outlier <- params$no_outlier"
"0","    "
"0",""
